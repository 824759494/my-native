<?php
class UserController extends BaseController {
	/* 
	*获取用户评价
	*$owernid 用户id
	*$start 分批加载起始元素索引
	*$pageSize 分批加载每一次加载数据长度
	*$rootid 获取的评价父级评论的id（评价是树状图的，每个评论对应一个父级评论多个子评论（回复） null表示最顶层，别人对用户的直接评价）
	*return:
	*{
	*	'status':操作状态 true-成功 false-失败,
	*	'data':评论数组 参考注释（1）,
	*	'num':评论总数
	*}
	*/
	public function getUserComment($owernid,$start=0,$pageSize=20,$rootid=null);
	/* 
	*添加评价（或者回复评价）
	*POST:
	*$_POST ['from_id']：发送评论的用户的uid
	*$_POST	['to_id']：父级评论的发送者的uid
	*$_POST	['content']：评论内容
	*$_POST	['owern_id']：评论的对象的拥有者（用户）的uid（发送本条分享的用户的uid）
	*$_POST	['parent_id']：父级评论的评论id（commentid）
	*$_POST	['deep']：评论的深度
	*
	*return:
	*{
	*	'status':true-成功 false,null-失败,
	*	'id':新添加评价id
	*}
	*/
	public  function addUserComment();
	/* 
	*删除 分享的评论
	*Request Method:POST
	*@owernid 发布当前分享的用户uid
	*@comment_id 评论id
	*return :
	*{
	*	'status':true-成功 false-失败,
	*}
	*/	
	public function deleteUserComment();
	/* 
	*视图路由接口 （pc版）
	*$subpage 视图名称
	*$account 账号
	*$lang 语言版本 ch-中文 en-英文
	*/
	
	public function home($subpage='share',$account=null,$lang='ch');

	/* 
	*获取标签集合
	*$start 分批加载起始元素索引
	*$pageSize 分批加载每一次加载数据长度
	*$rate 标签的使用频次（用以获取使用频次大的标签作为推荐标签）
	*return:
	*{
	*	'num':符合条件的标签总数,
	*	'data':标签数组
	*	{
	*		  `id`:标签id,
			  `flag`:标签内容,
			  `count`:引用频率,
	*	}
	*}
	*/	
	public function getFlagSet($start=0,$pageSize=20,$rate=10000);
	}
	/* 
	*保存用户信息
	*POST:{
	*	'userid':用户id,
	*	'baseinfo':用户基础信息结构 (1),
	*	'story':故事,
	*	'visitplace':到过的地方,
	*	'books':喜欢的书籍,
	*	'films':喜欢的电影,
	*	'flags':标签id集合，使用','英文逗号隔开,
	*	'contact':{"email":邮箱,"wechat":微信}联系方式,
	*}
	*(1){
	*		"nickname":昵称,
			"sex":性别 0-女 1-男,
			"sex_orientation":性取向 0-女 1-男 2-探索中,
			"emotional_partner":感情状态 0-单身 1-已婚,
			"birthday":生日,
			"countryid":国家id,
			"provinceid":省份id,
			"cityid":城市id
	*	}
	*return:
	*{
		'baseinfo':0-成功 1-错误 2-baseinfo为空,
		'contact':0-成功 1-错误 2-contact为空,
		'story':0-成功 1-错误 2-story为空,
		'visitplace':0-成功 1-错误 2-visitPlace为空,
		'books':0-成功 1-错误 2-books为空,
		'films':0-成功 1-错误 2-films为空,
		'flags':0-成功 1-错误 2-flags为空
	*}
	*/	
	public function saveUserInfo();
	
	/* 
	*添加图片
	*使用uploadify插件上传图片
	*@return：
	*status=0时{'status'=>0,'imgs'=>[返回的上传图片数据库信息数组 注释 1]}，成功
	*status=1 未登录 status=2 上传操作失败 status=3 数据库操作错误 
	*{'status'=>1、2或者3,'error'=>错误消息}
	*/
	public function addHeadImg();
	/* 
	*删除喜欢的电影
	*{'status':操作状态 0-成功 1-失败}
	*/	
	public function removefilm();
	/* 
	*删除喜欢的书籍
	*{'status':操作状态 0-成功 1-失败}
	*/	
	public function removebook();
	/* 
	*删除标签
	*{'status':操作状态 0-成功 1-失败}
	*/	
	public function removeflags();
}
/****************************************************************************************************************************************
 注释：
1。 {
		'owern_id':图片拥有者的uid
		'albumid':相册名id（这里不需要理会）
		'catname':相册名称（不需要理会）
		'savename':图片名称
		'savepath':图片存储路径
		'create_time':创建时间（unix时间戳）
		'thumbnames':缩略图名称集合（不需要理会）
		'id':图片存储id
	}
***********************************************************************************************************************************************/
 